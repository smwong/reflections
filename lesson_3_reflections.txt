q. When would you want to use a remote repository rather than keeping all your work local?
> When a project needs to be accessible by more than one person, like say with a group project or an app with a lot of people working on it. 

q. Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?
> Pulling changes automatically may cause commits to be pulled that I didn't want pulled or clutter it up. I'd rather choose when it happens. 

q. Describe the differences between forks, clones, and branches. When would you use one instead of another?
> Forks are only done on GitHub, and works similar to cloning. It's a way for others to modify a repository while also linking back to the original and keeping changes separate. Clone is done locally. Branches are the history of commits for a repository. The use of each depends on where, who, and how a project is worked on. 

q. What is the benefit of having a copy of the last known state of the remote stored locally?
> This way you can have an up to date version of the remote to work on or refer to, even if you're somewhere without internet access

q. How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?
> You could perhaps use other similar file sharing websites, or work on a computer together. It might not work as well, and would be slower if you have to share a computer. 

q. When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?
> This is a good way to test new features and have it checked before allowing it to merge with the master. That way, it can eliminate or reduce the amount of errors or bugs that might occur and also have a chance for second opinions from other team members
